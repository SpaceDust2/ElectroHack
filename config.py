"""
‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤
"""

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
DATA_PATHS = {
    'train': 'data/dataset_train.json',
    'test': 'data/dataset_test.json'
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–µ–π
MODEL_PARAMS = {
    'catboost': {
        'iterations': 1000,
        'learning_rate': 0.03,
        'depth': 8,
        'l2_leaf_reg': 3,
        'task_type': 'GPU',  # GPU —É—Å–∫–æ—Ä–µ–Ω–∏–µ
        'random_seed': 42,
        'verbose': False
    },
    'xgboost': {
        'n_estimators': 1000,
        'learning_rate': 0.03,
        'max_depth': 8,
        'subsample': 0.8,
        'colsample_bytree': 0.8,
        'tree_method': 'gpu_hist',  # GPU —É—Å–∫–æ—Ä–µ–Ω–∏–µ
        'random_state': 42
    },
    'random_forest': {
        'n_estimators': 200,
        'max_depth': 15,
        'min_samples_split': 20,
        'min_samples_leaf': 10,
        'random_state': 42,
        'n_jobs': -1
    }
}

# –ü—Ä–∞–≤–∏–ª–∞ –¥–µ—Ç–µ–∫—Ü–∏–∏ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π (–æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–µ–π—Å–∞)
FRAUD_RULES = {
    'rule1': {
        'description': '–í—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤ –æ—Ç–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ–∑–æ–Ω > 3000 –∫–í—Ç¬∑—á (–∫–ª—é—á–µ–≤–æ–π –∫—Ä–∏—Ç–µ—Ä–∏–π)',
        'condition': lambda df: df['heating_season'] > 3000
    },
    'rule2': {
        'description': '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ > 500 –∫–í—Ç¬∑—á',
        'condition': lambda df: df['min_consumption'] > 500
    },
    'rule3': {
        'description': '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ + –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ > 1000 –∫–í—Ç¬∑—á',
        'condition': lambda df: (df['summer_winter_ratio'].between(0.7, 1.3)) & (df['avg_consumption'] > 1000)
    },
    'rule4': {
        'description': '–°–≤–µ—Ä—Ö—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ (CV < 0.15) + –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ',
        'condition': lambda df: (df['cv'] < 0.15) & (df['avg_consumption'] > 800)
    },
    'rule5': {
        'description': '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –Ω–∞ –∂–∏—Ç–µ–ª—è > 1000 –∫–í—Ç¬∑—á',
        'condition': lambda df: df['consumption_per_resident'] > 1000
    }
}

# –£—Ä–æ–≤–Ω–∏ —Ä–∏—Å–∫–∞
RISK_LEVELS = {
    'HIGH': {
        'threshold': 0.8,
        'color': '#ff0000',
        'icon': 'üö®',
        'name_ru': '–í–´–°–û–ö–ò–ô',
        'description': '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
    },
    'MEDIUM': {
        'threshold': 0.6,
        'color': '#ff9900',
        'icon': '‚ö†Ô∏è',
        'name_ru': '–°–†–ï–î–ù–ò–ô',
        'description': '–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞'
    },
    'LOW': {
        'threshold': 0.4,
        'color': '#ffcc00',
        'icon': 'üìç',
        'name_ru': '–ù–ò–ó–ö–ò–ô',
        'description': '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏'
    },
    'MINIMAL': {
        'threshold': 0.0,
        'color': '#00cc00',
        'icon': '‚úÖ',
        'name_ru': '–ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô',
        'description': '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±—ã—Ç–æ–≤–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é'
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
PLOT_THEME = {
    'template': 'plotly_white',
    'colors': ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd'],
    'font_size': 12
}

# üõ°Ô∏è –ù–ê–°–¢–†–û–ô–ö–ò –ö–û–ù–°–ï–†–í–ê–¢–ò–í–ù–û–ô –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò –î–õ–Ø –ó–ê–©–ò–¢–´ –ß–ï–°–¢–ù–´–• –ñ–ò–¢–ï–õ–ï–ô
CLASSIFICATION_THRESHOLDS = {
    'default': 0.5,           # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä–æ–≥
    'conservative': 0.7,      # –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π - –º–µ–Ω—å—à–µ –ª–æ–∂–Ω—ã—Ö –æ–±–≤–∏–Ω–µ–Ω–∏–π
    'ultra_conservative': 0.85,  # –£–ª—å—Ç—Ä–∞-–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞
    'custom': 0.8             # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø–æ—Ä–æ–≥
}

# ü§ù –ù–ê–°–¢–†–û–ô–ö–ò –ê–ù–°–ê–ú–ë–õ–Ø –ò –ö–û–ù–°–ï–ù–°–£–°–ê
ENSEMBLE_SETTINGS = {
    'require_consensus': True,        # –¢—Ä–µ–±–æ–≤–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏—è –º–æ–¥–µ–ª–µ–π
    # –î–æ–ª—è –º–æ–¥–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è (2 –∏–∑ 3)
    'consensus_threshold': 0.67,
    'min_models_agree': 2,           # –ú–∏–Ω–∏–º—É–º –º–æ–¥–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è
    # –£—Å—Ä–µ–¥–Ω—è—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
    'use_probability_averaging': True,
    'individual_thresholds': {       # –ü–æ—Ä–æ–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
        'CatBoost': 0.75,
        'XGBoost': 0.8,
        'RandomForest': 0.85
    }
}

# üè† –ó–ê–©–ò–©–ï–ù–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å)
PROTECTED_CATEGORIES = {
    'enable_protection': True,
    'categories': {
        'elderly_threshold_age': 65,           # –í–æ–∑—Ä–∞—Å—Ç –¥–ª—è –ª—å–≥–æ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        'large_family_threshold': 4,           # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏—Ç–µ–ª–µ–π –¥–ª—è –º–Ω–æ–≥–æ–¥–µ—Ç–Ω–æ–π —Å–µ–º—å–∏
        # –ü–ª–æ—â–∞–¥—å –º–∞–ª–µ–Ω—å–∫–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã (–º¬≤)
        'small_apartment_threshold': 35,
        'low_income_consumption': 100          # –ù–∏–∑–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ (–ª—å–≥–æ—Ç–Ω–∏–∫–∏)
    },
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Ä–æ–≥ –Ω–∞ 20% –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö
    'protection_multiplier': 1.2,
    'additional_threshold': 0.05              # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 5% –∫ –ø–æ—Ä–æ–≥—É
}

# ‚öñÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–û–ò–ú–û–°–¢–ò –û–®–ò–ë–û–ö (Cost-Sensitive Learning)
ERROR_COSTS = {
    'false_positive_cost': 100,      # –°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–∂–Ω–æ–≥–æ –æ–±–≤–∏–Ω–µ–Ω–∏—è —á–µ—Å—Ç–Ω–æ–≥–æ
    'false_negative_cost': 10,       # –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–ø—É—Å–∫–∞ –º–æ—à–µ–Ω–Ω–∏–∫–∞
    'true_positive_reward': -20,     # –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–∏–º–∫—É –º–æ—à–µ–Ω–Ω–∏–∫–∞
    'true_negative_reward': 0        # –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Å—Ç–Ω–æ–≥–æ
}

# üîç –£–†–û–í–ù–ò –û–°–¢–û–†–û–ñ–ù–û–°–¢–ò –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò
CAUTION_LEVELS = {
    'aggressive': {
        'threshold': 0.5,
        'description': '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è - –±–æ–ª—å—à–µ –Ω–∞—Ö–æ–¥–∏–º, –±–æ–ª—å—à–µ –æ—à–∏–±–∞–µ–º—Å—è',
        'expected_precision': 0.75
    },
    'balanced': {
        'threshold': 0.65,
        'description': '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –∫–æ–º–ø—Ä–æ–º–∏—Å—Å —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª–Ω–æ—Ç—ã',
        'expected_precision': 0.85
    },
    'conservative': {
        'threshold': 0.8,
        'description': '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è - –º–µ–Ω—å—à–µ –æ—à–∏–±–æ–∫, –±–æ–ª—å—à–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤',
        'expected_precision': 0.92
    },
    'ultra_safe': {
        'threshold': 0.9,
        'description': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ —á–µ—Å—Ç–Ω—ã—Ö - —Ç–æ–ª—å–∫–æ –æ—á–µ–≤–∏–¥–Ω—ã–µ —Å–ª—É—á–∞–∏',
        'expected_precision': 0.97
    }
}
